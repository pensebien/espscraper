name: Daily ESP Scraper

on:
  schedule:
    - cron: "0 3 * * *"  # Every day at 3AM UTC
  workflow_dispatch:      # Manual trigger

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest

    env:
      PRODUCTS_URL: ${{ secrets.PRODUCTS_URL }}
      SEARCH_API_URL: ${{ secrets.SEARCH_API_URL }}
      GOTO_PAGE_API_URL: ${{ secrets.GOTO_PAGE_API_URL }}
      ESP_USERNAME: ${{ secrets.ESP_USERNAME }}
      ESP_PASSWORD: ${{ secrets.ESP_PASSWORD }}
      PYTHONPATH: .

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 🔧 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📦 Checkout artifacts branch
        uses: actions/checkout@v4
        with:
          ref: artifacts
          path: artifacts-branch

      - name: 🔄 Sync artifacts to working directory
        run: |
          cp -r artifacts-branch/espscraper/data/*.json* espscraper/data/ || true
          cp -r artifacts-branch/log/scraper.log log/ || true
          mkdir -p tmp
          cp -r artifacts-branch/tmp/* tmp/ || true

      - name: 🚀 Run ESP scraper
        run: |
          python -m espscraper --collect-link --limit 200 --batch-size 100 --headless

      - name: 📝 Copy new artifacts to artifacts branch
        run: |
          mkdir -p artifacts-branch/espscraper/data
          mkdir -p artifacts-branch/log
          mkdir -p artifacts-branch/tmp
          cp -r espscraper/data/*.json* artifacts-branch/espscraper/data/ || true
          cp -r log/scraper.log artifacts-branch/log/ || true
          cp -r tmp/* artifacts-branch/tmp/ || true

      - name: 🚀 Commit and push artifacts
        run: |
          cd artifacts-branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config --global url."https://${GITHUB_TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          git add .
          git commit -m "Update artifacts from workflow run $(date)" || echo "No changes to commit"
          git push origin artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📄 Generate product summary for email
        run: python espscraper/email_notification.py

      - name: 📄 Read product summary for email
        id: summary
        run: |
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          cat product_summary.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 📧 Send ${{job.status}} email with product summary
        if: always()
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "ESP Scraper Workflow Status: ${{ job.status }}"
          to: emma.awokoya.work@gmail.com
          from: ESP Scraper Bot <emma.awokoya.work@gmail.com>
          body: |
            The ESP Scraper status is a ${{ job.status }}.

            Latest products scraped:
            ${{ steps.summary.outputs.summary }}

            See details at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

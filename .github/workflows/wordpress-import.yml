name: WordPress Import Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
        - development
      mode:
        description: 'Import mode'
        required: true
        default: 'sync'
        type: choice
        options:
        - sync
        - override
      product_limit:
        description: 'Number of products to import'
        required: false
        default: '50'
        type: string
      use_enhanced_files:
        description: 'Use enhanced files (recommended)'
        required: false
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'

jobs:
  import-products:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install requests
        
    - name: Set environment-specific secrets
      id: set-secrets
      run: |
        ENVIRONMENT="${{ github.event.inputs.environment }}"
        echo "Setting secrets for environment: $ENVIRONMENT"
        
        # Debug: Check if secrets are available
        echo "üîç Checking GitHub Secrets availability:"
        if [ -n "${{ secrets.WP_API_URL }}" ]; then
          echo "‚úÖ WP_API_URL is set"
        else
          echo "‚ùå WP_API_URL is NOT set"
        fi
        
        if [ -n "${{ secrets.WP_API_KEY }}" ]; then
          echo "‚úÖ WP_API_KEY is set"
        else
          echo "‚ùå WP_API_KEY is NOT set"
        fi
        
        if [ -n "${{ secrets.WP_BASIC_AUTH_USER }}" ]; then
          echo "‚úÖ WP_BASIC_AUTH_USER is set"
        else
          echo "‚ùå WP_BASIC_AUTH_USER is NOT set"
        fi
        
        if [ -n "${{ secrets.WP_BASIC_AUTH_PASS }}" ]; then
          echo "‚úÖ WP_BASIC_AUTH_PASS is set"
        else
          echo "‚ùå WP_BASIC_AUTH_PASS is NOT set"
        fi
        
        # Set WordPress API credentials
        echo "WP_API_URL=${{ secrets.WP_API_URL }}" >> $GITHUB_ENV
        echo "WP_API_KEY=${{ secrets.WP_API_KEY }}" >> $GITHUB_ENV
        echo "WP_BASIC_AUTH_USER=${{ secrets.WP_BASIC_AUTH_USER }}" >> $GITHUB_ENV
        echo "WP_BASIC_AUTH_PASS=${{ secrets.WP_BASIC_AUTH_PASS }}" >> $GITHUB_ENV
        
        # Debug: Verify environment variables are set
        echo ""
        echo "üîç Verifying environment variables:"
        echo "WP_API_URL: ${WP_API_URL:0:20}..." # Show first 20 chars for security
        echo "WP_API_KEY: ${WP_API_KEY:0:10}..." # Show first 10 chars for security
        echo "WP_BASIC_AUTH_USER: $WP_BASIC_AUTH_USER"
        echo "WP_BASIC_AUTH_PASS: ${WP_BASIC_AUTH_PASS:0:5}..." # Show first 5 chars for security
        
        echo "‚úÖ Environment secrets set for: $ENVIRONMENT"
        
    - name: Copy artifacts from artifacts branch
      id: copy-artifacts
      run: |
        echo "üìÅ Copying artifacts from artifacts branch..."
        
        # Fetch the artifacts branch
        git fetch origin artifacts:artifacts
        
        # Copy enhanced files from artifacts branch
        if git show artifacts:enhanced/ > /dev/null 2>&1; then
          echo "üìÅ Copying enhanced files from artifacts branch..."
          git checkout artifacts -- enhanced/
          ls -la enhanced/
        else
          echo "‚ö†Ô∏è No enhanced directory found in artifacts branch"
        fi
        
        # Copy batch files from artifacts branch
        if git show artifacts:batch/ > /dev/null 2>&1; then
          echo "üìÅ Copying batch files from artifacts branch..."
          git checkout artifacts -- batch/
          ls -la batch/
        else
          echo "‚ö†Ô∏è No batch directory found in artifacts branch"
        fi
        
        echo "‚úÖ Artifacts copied successfully"
        
    - name: Process and import products
      id: import-process
      env:
        IMPORT_MODE: ${{ github.event.inputs.mode }}
        PRODUCT_LIMIT: ${{ github.event.inputs.product_limit }}
        USE_ENHANCED_FILES: ${{ github.event.inputs.use_enhanced_files }}
      run: |
        echo "üöÄ Starting WordPress Import"
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "Mode: ${{ github.event.inputs.mode }}"
        echo "Product Limit: ${{ github.event.inputs.product_limit }}"
        echo "Use Enhanced Files: ${{ github.event.inputs.use_enhanced_files }}"
        echo ""
        
        # Check available files
        echo "üìÅ Available files:"
        ls -la
        if [ -d "enhanced" ]; then
          echo "üìÅ Enhanced files:"
          ls -la enhanced/
        fi
        if [ -d "batch" ]; then
          echo "üìÅ Batch files:"
          ls -la batch/
        fi
        echo ""
        
        # Debug: Show what will be passed to Python script
        echo ""
        echo "üîç Python script parameters:"
        echo "WP_API_URL: ${WP_API_URL:0:20}..."
        echo "WP_API_KEY: ${WP_API_KEY:0:10}..."
        echo "IMPORT_MODE: $IMPORT_MODE"
        echo "PRODUCT_LIMIT: $PRODUCT_LIMIT"
        echo "USE_ENHANCED_FILES: $USE_ENHANCED_FILES"
        echo "WP_BASIC_AUTH_USER: $WP_BASIC_AUTH_USER"
        echo "WP_BASIC_AUTH_PASS: ${WP_BASIC_AUTH_PASS:0:5}..."
        echo ""
        
        # Run the import script
        python import_to_wordpress.py \
          --wp-api-url "$WP_API_URL" \
          --wp-api-key "$WP_API_KEY" \
          --mode "$IMPORT_MODE" \
          --product-limit "$PRODUCT_LIMIT" \
          $([ "$USE_ENHANCED_FILES" = "true" ] && echo "--use-enhanced-files") \
          $([ -n "$WP_BASIC_AUTH_USER" ] && echo "--wp-basic-auth-user" "$WP_BASIC_AUTH_USER") \
          $([ -n "$WP_BASIC_AUTH_PASS" ] && echo "--wp-basic-auth-pass" "$WP_BASIC_AUTH_PASS")
        
    - name: Upload import results
      uses: actions/upload-artifact@v4
      with:
        name: import-results-${{ github.event.inputs.environment }}
        path: |
          import_summary.json
          import_errors.json
          import_progress.json
          import_heartbeat.json
        retention-days: 30
        
    - name: Display results
      run: |
        echo "üéâ Import completed!"
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "Mode: ${{ github.event.inputs.mode }}"
        echo "Use Enhanced Files: ${{ github.event.inputs.use_enhanced_files }}"
        echo "Product Limit: ${{ github.event.inputs.product_limit }}"
        echo ""
        
        # Display summary if available
        if [ -f "import_summary.json" ]; then
          echo "üìä Import Summary:"
          cat import_summary.json | python -m json.tool
        fi
        
        # Display heartbeat if available
        if [ -f "import_heartbeat.json" ]; then
          echo ""
          echo "üíì Import Heartbeat:"
          cat import_heartbeat.json | python -m json.tool
        fi
        
        # Display errors if any
        if [ -f "import_errors.json" ]; then
          echo ""
          echo "‚ùå Import Errors:"
          cat import_errors.json | python -m json.tool
        fi

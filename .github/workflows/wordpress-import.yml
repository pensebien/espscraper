name: WordPress Import from Batch Files

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Import mode (sync or override)'
        required: false
        default: 'sync'
      product_limit:
        description: 'Total number of products to import (across all batches)'
        required: false
        default: '100'
      wp_api_url:
        description: 'WordPress API URL'
        required: false
        default: ''
      wp_api_key:
        description: 'WordPress API key'
        required: false
        default: ''
      wp_basic_auth_user:
        description: 'WordPress Basic Auth Username'
        required: false
        default: ''
      wp_basic_auth_pass:
        description: 'WordPress Basic Auth Password'
        required: false
        default: ''

permissions:
  contents: read

jobs:
  import_to_wordpress:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv

      - name: 📥 Fetch batch files from artifacts branch
        run: |
          echo "=== Fetching batch files from artifacts branch ==="

          # Try to fetch the artifacts branch
          if git ls-remote --heads origin artifacts | grep -q artifacts; then
            echo "✅ Artifacts branch exists, fetching latest files..."
            git fetch origin artifacts:artifacts || echo "Could not fetch artifacts branch"

            # Copy batch files if they exist
            if [ -d "artifacts-branch/batches" ]; then
              cp -r artifacts-branch/batches/* . || echo "No batch files to copy"
              echo "✅ Updated batch files from artifacts branch"
            fi

            # Copy main output file if it exists
            if [ -f "artifacts-branch/final_product_details.jsonl" ]; then
              cp artifacts-branch/final_product_details.jsonl .
              echo "✅ Updated final_product_details.jsonl from artifacts branch"
            fi

            # Show available files
            echo "=== Available batch files ==="
            ls -la batch_*.jsonl 2>/dev/null || echo "No batch files found"
            ls -la final_product_details.jsonl 2>/dev/null || echo "No main output file found"
          else
            echo "⚠️ Artifacts branch does not exist, no batch files available"
          fi

      - name: 🔧 Create import script
        run: |
          cat > import_to_wordpress.py << 'EOF'
          #!/usr/bin/env python3
          """
          WordPress Import Script
          Imports prepared batch files to WordPress via REST API
          """

          import os
          import json
          import glob
          import requests
          from datetime import datetime
          import time
          import subprocess
          import sys

          class WordPressImporter:
              def __init__(self, api_url, api_key, basic_auth_user=None, basic_auth_pass=None):
                  self.api_url = api_url
                  self.api_key = api_key
                  self.basic_auth_user = basic_auth_user
                  self.basic_auth_pass = basic_auth_pass
                  self.session = requests.Session()

                  # Set up authentication
                  if basic_auth_user and basic_auth_pass:
                      self.session.auth = (basic_auth_user, basic_auth_pass)

                  self.session.headers.update({
                      'Authorization': f'Bearer {api_key}',
                      'Content-Type': 'application/json',
                      'User-Agent': 'PromoStandards-Importer/1.0'
                  })

              def prepare_batches(self, mode, batch_size=50):
                  """Prepare batches using the batch_preparer script"""
                  print("🔧 Preparing batches using batch_preparer.py...")

                  # Find batch files
                  batch_files = glob.glob("batch_*.jsonl")
                  if not batch_files:
                      # Try main output file
                      if os.path.exists("final_product_details.jsonl"):
                          batch_files = ["final_product_details.jsonl"]
                          print("📁 Using main output file as batch")
                      else:
                          print("❌ No batch files found")
                          return []

                  print(f"📁 Found {len(batch_files)} batch files to prepare")

                  # Build command for batch preparer
                  cmd = [
                      sys.executable, "batch_preparer.py",
                      "--input"] + batch_files + [
                      "--mode", mode,
                      "--batch-size", str(batch_size),
                      "--output-dir", "prepared_batches"
                  ]

                  # Add WordPress API if available
                  if hasattr(self, 'api_url') and hasattr(self, 'api_key'):
                      cmd.extend(["--wp-api-url", self.api_url, "--wp-api-key", self.api_key])

                  print(f"🚀 Running: {' '.join(cmd)}")

                  try:
                      result = subprocess.run(cmd, capture_output=True, text=True, check=True)
                      print(result.stdout)

                      # Find prepared batch files
                      prepared_files = glob.glob("prepared_batches/prepared_batch_*.jsonl")
                      print(f"✅ Prepared {len(prepared_files)} batch files")
                      return prepared_files

                  except subprocess.CalledProcessError as e:
                      print(f"❌ Batch preparation failed: {e}")
                      print(f"Error output: {e.stderr}")
                      return []

              def import_batch(self, batch_file, batch_name):
                  """Import a batch file to WordPress"""
                  print(f"📤 Importing {batch_file}...")

                  try:
                      # Upload batch file
                      with open(batch_file, 'rb') as f:
                          files = {'file': (batch_name, f, 'application/json')}
                          response = self.session.post(f"{self.api_url}/upload", files=files)

                      if response.status_code == 200:
                          result = response.json()
                          print(f"✅ {batch_name}: {result.get('imported', 0)} imported, {result.get('errors', 0)} errors")
                          return result
                      else:
                          print(f"❌ {batch_name}: HTTP {response.status_code} - {response.text}")
                          return {'imported': 0, 'errors': 0}

                  except Exception as e:
                      print(f"❌ {batch_name}: Error - {e}")
                      return {'imported': 0, 'errors': 0}

              def run_import(self, mode, batch_limit=50):
                  """Run the complete import process"""
                  print(f"🚀 Starting WordPress import in {mode} mode...")

                  # Prepare batches
                  prepared_batches = self.prepare_batches(mode, batch_limit)

                  if not prepared_batches:
                      print("❌ No batches prepared for import")
                      return {
                          'total_imported': 0,
                          'total_errors': 0,
                          'mode': mode,
                          'timestamp': datetime.now().isoformat()
                      }

                  total_imported = 0
                  total_errors = 0

                  # Import each prepared batch
                  for batch_file in sorted(prepared_batches):
                      batch_name = os.path.basename(batch_file)
                      result = self.import_batch(batch_file, batch_name)
                      total_imported += result.get('imported', 0)
                      total_errors += result.get('errors', 0)

                      # Small delay between batches
                      time.sleep(1)

                  print(f"\n🎉 Import complete!")
                  print(f"📊 Total imported: {total_imported}")
                  print(f"❌ Total errors: {total_errors}")

                  return {
                      'total_imported': total_imported,
                      'total_errors': total_errors,
                      'mode': mode,
                      'timestamp': datetime.now().isoformat()
                  }

          if __name__ == "__main__":
              import sys

              # Get parameters
              mode = os.getenv('IMPORT_MODE', 'sync')
              product_limit = os.getenv('PRODUCT_LIMIT', '100')
              wp_api_url = os.getenv('WP_API_URL')
              wp_api_key = os.getenv('WP_API_KEY')
              wp_basic_auth_user = os.getenv('WP_BASIC_AUTH_USER')
              wp_basic_auth_pass = os.getenv('WP_BASIC_AUTH_PASS')

              if not wp_api_url or not wp_api_key:
                  print("❌ WordPress API URL and key are required")
                  sys.exit(1)

              # Create importer
              importer = WordPressImporter(
                  api_url=wp_api_url,
                  api_key=wp_api_key,
                  basic_auth_user=wp_basic_auth_user,
                  basic_auth_pass=wp_basic_auth_pass
              )

              # Run import
              result = importer.run_import(mode, product_limit)

              # Save result
              with open('import_result.json', 'w') as f:
                  json.dump(result, f, indent=2)

              print(f"📄 Import result saved to import_result.json")
          EOF

          chmod +x import_to_wordpress.py

      - name: 🚀 Run WordPress import
        run: |
          echo "=== Starting WordPress import ==="
          echo "Mode: ${{ github.event.inputs.mode || 'sync' }}"
          echo "Product limit: ${{ github.event.inputs.product_limit || '100' }}"
          python3 import_to_wordpress.py
        env:
          IMPORT_MODE: ${{ github.event.inputs.mode || 'sync' }}
          PRODUCT_LIMIT: ${{ github.event.inputs.product_limit || '100' }}
          WP_API_URL: ${{ github.event.inputs.wp_api_url || secrets.WP_API_URL }}
          WP_API_KEY: ${{ github.event.inputs.wp_api_key || secrets.WP_API_KEY }}
          WP_BASIC_AUTH_USER: ${{ github.event.inputs.wp_basic_auth_user || secrets.WP_BASIC_AUTH_USER }}
          WP_BASIC_AUTH_PASS: ${{ github.event.inputs.wp_basic_auth_pass || secrets.WP_BASIC_AUTH_PASS }}

      - name: 📋 Show import results
        run: |
          echo "=== Import Results ==="
          if [ -f "import_result.json" ]; then
            cat import_result.json
          else
            echo "No import result file found"
          fi

          echo "=== Available batch files after import ==="
          ls -la batch_*.jsonl 2>/dev/null || echo "No batch files found"

      - name: ✅ Notify completion
        run: |
          echo "WordPress import complete!"
          if [ -f "import_result.json" ]; then
            imported=$(jq -r '.total_imported' import_result.json)
            errors=$(jq -r '.total_errors' import_result.json)
            echo "📊 Imported: $imported, Errors: $errors"
          fi

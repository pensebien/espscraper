name: Plugin Scraper (Streaming + Batch Save)

on:
  workflow_dispatch:
    inputs:
      limit:
        description: 'Product limit'
        required: false
        default: '500'
      resume:
        description: 'Resume previous run'
        required: false
        default: 'false'
        
permissions:
  contents: write


jobs:
  scrape_and_upload:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: üîß Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Chrome WebDriver
        uses: actions/cache@v4
        with:
          path: ~/.cache/selenium
          key: ${{ runner.os }}-selenium-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-selenium-

      - name: üì¶ Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache scraped data
        uses: actions/cache@v4
        with:
          path: |
            espscraper/data
            tmp
            log
          key: ${{ runner.os }}-scraped-data-${{ hashFiles('**/requirements.txt') }}-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-scraped-data-${{ hashFiles('**/requirements.txt') }}-

      - name: üìÅ Create directories
        run: |
          mkdir -p espscraper/data
          mkdir -p tmp
          mkdir -p log

      - name: Fetch API URL and Key from WordPress (Optional)
        id: get_params
        run: |
          # Try to fetch from WordPress, but don't fail if it doesn't work
          curl -s "https://exclusive-carpenter.localsite.io/wp-json/promostandards-importer/v1/github-params?secret=${{ secrets.WP_API_SECRET }}" > params.json || echo '{"api_url": "", "api_key": ""}' > params.json
          echo "WP_API_URL=$(jq -r .api_url params.json)" >> $GITHUB_ENV
          echo "WP_API_KEY=$(jq -r .api_key params.json)" >> $GITHUB_ENV
          echo "WordPress integration status: $(jq -r .api_url params.json | grep -q '^$' && echo 'Not configured' || echo 'Configured')"

      - name: üöÄ Run ESP scraper (streaming upload + batch save)
        run: |
          python3 -m espscraper.production_main \
            --limit ${{ github.event.inputs.limit || '1000' }} \
            --headless
        env:
          ESP_USERNAME: ${{ secrets.ESP_USERNAME }}
          ESP_PASSWORD: ${{ secrets.ESP_PASSWORD }}
          PRODUCTS_URL: ${{ secrets.PRODUCTS_URL }}
          SEARCH_API_URL: ${{ secrets.SEARCH_API_URL }}
          GOTO_PAGE_API_URL: ${{ secrets.GOTO_PAGE_API_URL }}
          WP_API_URL: ${{ env.WP_API_URL }}
          WP_API_KEY: ${{ env.WP_API_KEY }}

      - name: üì¶ Checkout artifacts branch
        uses: actions/checkout@v4
        with:
          ref: artifacts
          path: artifacts-branch

      - name: üìù Copy batch files to artifacts branch
        run: |
          mkdir -p artifacts-branch/batches
          cp batch_*.jsonl artifacts-branch/batches/ || true
          cp batch_*.meta.json artifacts-branch/batches/ || true

      - name: üöÄ Commit and push batch files
        run: |
          cd artifacts-branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add batches/
          git commit -m "Add batch files from workflow run $(date)" || echo "No changes to commit"
          git push origin artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚úÖ Notify completion
        run: echo "Scraper run, streaming upload, and batch save complete."